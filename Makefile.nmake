## Makefile for building ethereal.exe with Microsoft C and nmake
## Use: nmake -f makefile.nmake
#
# $Id: Makefile.nmake,v 1.27 2000/04/13 21:08:16 oabad Exp $

include config.nmake

############### no need to modify below this line #########

CC = cl
LINK= link

LDFLAGS = /NOLOGO /SUBSYSTEM:console /INCREMENTAL:no /MACHINE:I386 \
	$(LOCAL_LDFLAGS)

CFLAGS=/MT -DHAVE_CONFIG_H $(LOCAL_CFLAGS) /I$(GLIB_DIR) /I$(GLIB_DIR)\gmodule \
	/I$(GTK_DIR) /Iwiretap /I$(GTK_DIR)\gdk /I$(GTK_DIR)\gdk\win32 \
	/I$(PCAP_DIR)/include

DISSECTOR_OBJECTS = \
	packet-aarp.obj  \
	packet-afs.obj   \
	packet-arp.obj   \
	packet-ascend.obj\
	packet-atalk.obj \
	packet-atm.obj   \
	packet-auto_rp.obj   \
	packet-bgp.obj   \
	packet-bootp.obj \
	packet-bootparams.obj \
	packet-bpdu.obj  \
	packet-cdp.obj   \
	packet-cgmp.obj  \
	packet-clip.obj  \
	packet-data.obj  \
	packet-ddtp.obj  \
	packet-dns.obj   \
	packet-eth.obj   \
	packet-ethertype.obj   \
	packet-fddi.obj  \
	packet-ftp.obj   \
	packet-giop.obj  \
	packet-gre.obj   \
	packet-h1.obj    \
	packet-hsrp.obj  \
	packet-http.obj  \
	packet-icmpv6.obj\
	packet-icp.obj   \
	packet-icq.obj   \
	packet-imap.obj   \
	packet-ip.obj    \
	packet-ipp.obj   \
	packet-ipsec.obj \
	packet-ipv6.obj  \
	packet-ipx.obj   \
	packet-irc.obj   \
	packet-isakmp.obj\
	packet-isis.obj  \
	packet-isis-clv.obj \
	packet-isis-hello.obj \
	packet-isis-lsp.obj \
	packet-isis-snp.obj \
	packet-isl.obj \
	packet-l2tp.obj  \
	packet-lapb.obj  \
	packet-lapd.obj  \
	packet-ldap.obj  \
	packet-llc.obj   \
	packet-lpd.obj   \
	packet-mapi.obj  \
	packet-mount.obj \
	packet-mpls.obj \
	packet-nbipx.obj \
	packet-nbns.obj  \
	packet-ncp.obj   \
	packet-netbios.obj \
	packet-nfs.obj   \
	packet-nlm.obj   \
	packet-nntp.obj  \
	packet-ntp.obj  \
	packet-null.obj  \
	packet-osi.obj   \
	packet-ospf.obj  \
	packet-pim.obj   \
	packet-pop.obj   \
	packet-portmap.obj   \
	packet-ppp.obj   \
	packet-pppoe.obj \
	packet-pptp.obj  \
	packet-q2931.obj \
	packet-q931.obj  \
	packet-radius.obj\
	packet-raw.obj   \
	packet-rip.obj   \
	packet-ripng.obj \
	packet-rlogin.obj \
	packet-rpc.obj   \
	packet-rsvp.obj  \
	packet-rtsp.obj  \
	packet-rx.obj  \
	packet-sap.obj   \
	packet-sdp.obj   \
	packet-smb.obj   \
	packet-smb-browse.obj \
	packet-smb-common.obj \
	packet-smb-logon.obj \
	packet-smb-mailslot.obj \
	packet-smb-pipe.obj \
	packet-sna.obj   \
	packet-snmp.obj	\
	packet-socks.obj \
	packet-srvloc.obj \
	packet-sscop.obj \
	packet-stat.obj   \
	packet-tacacs.obj \
	packet-tcp.obj   \
	packet-telnet.obj\
	packet-tftp.obj  \
	packet-time.obj  \
	packet-tns.obj \
	packet-tr.obj    \
	packet-trmac.obj \
	packet-udp.obj   \
	packet-v120.obj \
	packet-vines.obj \
	packet-vlan.obj \
	packet-vrrp.obj \
	packet-vtp.obj  \
	packet-wccp.obj\
	packet-who.obj\
	packet-x25.obj   \
	packet-yhoo.obj  \
	packet-ypbind.obj \
	packet-ypserv.obj \
	packet-ypxfr.obj \

ETHEREAL_COMMON_OBJECTS = \
	asn1.obj         \
	column.obj       \
	conversation.obj \
	dfilter-grammar.obj \
	dfilter-scanner.obj \
	dfilter.obj      \
	follow.obj       \
	getopt.obj	 \
	ipproto.obj      \
	ipv4.obj         \
	packet.obj       \
	plugins.obj      \
	prefs.obj        \
	print.obj        \
	proto.obj        \
	ps.obj           \
	register.obj     \
	resolv.obj       \
	util.obj         \
	xdlc.obj         \

ethereal_OBJECTS = \
	$(DISSECTOR_OBJECTS) \
	$(ETHEREAL_COMMON_OBJECTS) \
	capture.obj      \
	file.obj         \
	summary.obj      \

tethereal_OBJECTS = \
	$(DISSECTOR_OBJECTS) \
	$(ETHEREAL_COMMON_OBJECTS) \
	tethereal.obj

EXTRA_OBJECTS = \
	snprintf.obj	\
	strerror.obj	\
	mkstemp.obj	\
	inet_aton.obj     \
	inet_pton.obj     \
	inet_ntop.obj

ethereal_LIBS= wiretap\libwtap.lib gtk\libui.lib wsock32.lib user32.lib \
	$(GTK_DIR)\gtk\gtk-$(GTK_VERSION).lib \
	$(GTK_DIR)\gdk\win32\gdk-$(GTK_VERSION).lib \
	$(GLIB_DIR)\glib-$(GLIB_VERSION).lib \
	$(GLIB_DIR)\gmodule-$(GLIB_VERSION).lib \
	$(PCAP_DIR)\lib\libpcap.lib

tethereal_LIBS= wiretap\libwtap.lib wsock32.lib user32.lib \
	$(GLIB_DIR)\glib-$(GLIB_VERSION).lib \
	$(GLIB_DIR)\gmodule-$(GLIB_VERSION).lib \
	$(PCAP_DIR)\lib\libpcap.lib

editcap_LIBS= wiretap\libwtap.lib wsock32.lib user32.lib \
	$(GLIB_DIR)\glib-$(GLIB_VERSION).lib \
	$(GLIB_DIR)\gmodule-$(GLIB_VERSION).lib

EXECUTABLES=ethereal.exe tethereal.exe editcap.exe

all: $(EXECUTABLES)

ethereal.exe	: config.h $(ethereal_OBJECTS) $(EXTRA_OBJECTS) wiretap gtk plugins
	$(LINK) @<<
		/OUT:ethereal.exe $(LDFLAGS) $(ethereal_LIBS) $(ethereal_OBJECTS) $(EXTRA_OBJECTS)
<<

tethereal.exe	: config.h $(tethereal_OBJECTS) $(EXTRA_OBJECTS) wiretap plugins
	$(LINK) @<<
		/OUT:tethereal.exe $(LDFLAGS) $(tethereal_LIBS) $(tethereal_OBJECTS) $(EXTRA_OBJECTS)
<<

editcap.exe	: config.h editcap.obj getopt.obj wiretap
	$(LINK) @<<
		/OUT:editcap.exe $(LDFLAGS) editcap.obj getopt.obj $(editcap_LIBS)
<<

config.h	: config.h.win32
	copy config.h.win32 $@

ps.c	: rdps.exe print.ps
	rdps print.ps ps.c

dfilter-scanner.obj : dfilter-scanner.c dfilter-grammar.h

dfilter-scanner.c : dfilter-scanner.l
	$(LEX) -Pdfilter_ -odfilter-scanner.c dfilter-scanner.l

dfilter-grammar.c dfilter-grammar.h : dfilter-grammar.y
	$(YACC) $(YACC_OPTS) -d -p dfilter_ dfilter-grammar.y -o dfilter-grammar.c

#
# TODO: Create register.c
#

clean:
	rm -f $(ethereal_OBJECTS) $(EXTRA_OBJECTS) $(EXECUTABLES) tethereal.obj editcap.obj
	cd wiretap
	nmake -f Makefile.nmake clean
	cd ../gtk
	nmake -f Makefile.nmake clean
	cd ../plugins
	nmake -f Makefile.nmake clean
	cd ..

wiretap::
	cd wiretap
	nmake -f Makefile.nmake
	cd ..

gtk::
	cd gtk
	nmake -f Makefile.nmake
	cd ..

plugins::
	cd plugins
	nmake -f Makefile.nmake
	cd ..

