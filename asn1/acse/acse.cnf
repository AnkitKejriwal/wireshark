# asce.cnf
# ACSE conformation file

# $Id$

#.INCLUDE ../x509if/x509if-exp.cnf

#.EXPORTS
EXTERNALt
AP-title
AP-invocation-identifier
AE-qualifier
ASO-qualifier
AE-invocation-identifier

#.TYPE_RENAME
AARQ-apdu/protocol-version	T_AARQ_protocol_version
AARE-apdu/protocol-version	T_AARE_protocol_version
AARQ-apdu/aSO-context-name	T_AARQ_aSO_context_name		
AARE-apdu/aSO-context-name	T_AARE_aSO_context_name
ACRQ-apdu/aSO-context-name	T_ACRQ_aSO_context_name
ACRP-apdu/aSO-context-name	T_ACRP_aSO_context_name

#.FIELD_RENAME
AARQ-apdu/user-information	aARQ_user_information
AARE-apdu/user-information	aARE_user_information
ABRT-apdu/user-information	aBRT_user_information
RLRE-apdu/user-information	rLRE_user_information
RLRQ-apdu/user-information	rLRQ_user_information
AARE-apdu/result		aARE_result
P-context-result-list/_item/result	pcontext_result
RLRE-apdu/reason		rLRE_reason
RLRQ-apdu/reason		rLRQ_reason
AARQ-apdu/protocol-version	aARQ_protocol_version
AARE-apdu/protocol-version	aARE_protocol_version
AARQ-apdu/aSO-context-name	aARQ_aSO_context_name
AARE-apdu/aSO-context-name	aARE_aSO_context_name
ACRQ-apdu/aSO-context-name	aCRQ_aSO_context_name

#.FN_BODY EXTERNALt
  gint8 class;
  gboolean pc, ind_field;
  gint32 tag;
  guint32 len1;

  if(!implicit_tag) {
    /* XXX  asn2wrs can not yet handle tagged assignment so for the
     * time being  just remove this tag manually inside the EXTERNAL
     * dissector.
     */
     offset = get_ber_identifier(tvb, offset, &class, &pc, &tag);
     offset = get_ber_length(tree, tvb, offset, &len1, &ind_field);
   }
   offset = dissect_ber_sequence(TRUE, pinfo, tree, tvb, offset,
                                EXTERNALt_sequence, hf_index, ett_acse_EXTERNALt);

#.FN_PARS Authentication-value-other/other-mechanism-name  
  FN_VARIANT = _str VAL_PTR = &object_identifier_id

#.FN_BODY Authentication-value-other/other-mechanism-value
  offset=call_ber_oid_callback(object_identifier_id, tvb, offset, pinfo, top_tree);

#.FN_BODY PDV-list/presentation-data-values/simple-ASN1-type
/*XXX not implemented yet */

#.FN_BODY AARQ-apdu/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, pinfo, tree, tvb, offset,
                                         hf_index, &object_identifier_id);

#.FN_BODY AARE-apdu/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, pinfo, tree, tvb, offset,
                                         hf_index, &object_identifier_id);

#.FN_BODY ACRQ-apdu/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, pinfo, tree, tvb, offset,
                                         hf_index, &object_identifier_id);

#.FN_BODY ACRP-apdu/aSO-context-name
  offset = dissect_ber_object_identifier_str(FALSE, pinfo, tree, tvb, offset,
                                         hf_index, &object_identifier_id);

#.FN_BODY EXTERNALt/indirect-reference
  char *oid;
  offset = dissect_ber_integer(FALSE, pinfo, tree, tvb, offset,
                hf_acse_indirect_reference,
                &indir_ref);

  /* look up the indirect reference */
  if((oid = find_oid_by_pres_ctx_id(pinfo, indir_ref)) != NULL) {
    object_identifier_id = ep_strdup(oid);
  }

  if(session)
	session->pres_ctx_id = indir_ref;

#.FN_PARS EXTERNALt/direct-reference
  FN_VARIANT = _str VAL_PTR = &object_identifier_id

#.FN_BODY EXTERNALt/encoding/single-ASN1-type
  offset=call_ber_oid_callback(object_identifier_id, tvb, offset, pinfo, top_tree ? top_tree : tree);

#.FN_PARS Release-request-reason
  VAL_PTR=&reason

#.FN_BODY Release-request-reason
  int reason = -1;
 
  %(DEFAULT_BODY)s

  if((reason != -1) && check_col(pinfo->cinfo, COL_INFO))
   col_append_fstr(pinfo->cinfo, COL_INFO, "Release-Request (%%s)", val_to_str(reason, acse_Release_request_reason_vals, "reason(%%d)"));


#.FN_PARS Release-response-reason
  VAL_PTR=&reason

#.FN_BODY Release-response-reason
  int reason = -1;
 
  %(DEFAULT_BODY)s

  if((reason != -1) && check_col(pinfo->cinfo, COL_INFO))
   col_append_fstr(pinfo->cinfo, COL_INFO, "Release-Response (%%s)", val_to_str(reason, acse_Release_request_reason_vals, "reason(%%d)"));




#.END
