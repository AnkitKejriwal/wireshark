#.INCLUDE ../x509sat/x509sat-exp.cnf
#.INCLUDE ../x509if/x509if-exp.cnf
#.INCLUDE ../x509af/x509af-exp.cnf
#.INCLUDE ../dsp/dsp-exp.cnf
#.INCLUDE ../dap/dap-exp.cnf
#.INCLUDE ../pkixcrmf/crmf-exp.cnf
#.INCLUDE ../acse/acse-exp.cnf

#.MODULE_IMPORT
BasicAccessControl		crmf

#.EXPORTS
DSEType
SupplierAndConsumers
OperationalBindingID

#.TYPE_RENAME
EstablishOperationalBindingArgumentData/initiator	EstablishArgumentInitiator
ModifyOperationalBindingArgumentData/initiator		ModifyArgumentInitiator
TerminateOperationalBindingArgumentData/initiator	TerminateArgumentInitiator

ModifyOperationalBindingArgumentData/newAgreement	ArgumentNewAgreement
ModifyOperationalBindingResultData/newAgreement		ResultNewAgreement

ModifyOperationalBindingResult/protected		ProtectedModifyResult
TerminateOperationalBindingResult/protected		ProtectedTerminateResult

EstablishOperationalBindingArgumentData/initiator/roleA-initiates	EstablishRoleAInitiates
ModifyOperationalBindingArgumentData/initiator/roleA-initiates		ModifyRoleAInitiates
TerminateOperationalBindingArgumentData/initiator/roleA-initiates	TerminateRoleAInitiates

EstablishOperationalBindingArgumentData/initiator/roleB-initiates	EstablishRoleBInitiates
ModifyOperationalBindingArgumentData/initiator/roleB-initiates		ModifyRoleBInitiates
TerminateOperationalBindingArgumentData/initiator/roleB-initiates	TerminateRoleBInitiates

EstablishOperationalBindingArgumentData/initiator/symmetric		EstablishSymmetric
ModifyOperationalBindingArgumentData/initiator/symmetric		ModifySymmetric
TerminateOperationalBindingArgumentData/initiator/symmetric		TerminateSymmetric


#.FIELD_RENAME
EstablishOperationalBindingArgumentData/initiator	establishInitiator
ModifyOperationalBindingArgumentData/initiator		modifyInitiator
TerminateOperationalBindingArgumentData/initiator	terminateInitiator

ModifyOperationalBindingArgumentData/newAgreement	argumentNewAgreement
ModifyOperationalBindingResultData/newAgreement		resultNewAgreement

ModifyOperationalBindingResult/protected		protectedModifyResult
TerminateOperationalBindingResult/protected		protectedTerminateResult

EstablishOperationalBindingArgumentData/initiator/roleA-initiates	establishRoleAInitiates
ModifyOperationalBindingArgumentData/initiator/roleA-initiates		modifyRoleAInitiates
TerminateOperationalBindingArgumentData/initiator/roleA-initiates	terminateRoleAInitiates

EstablishOperationalBindingArgumentData/initiator/roleB-initiates	establishRoleBInitiates
ModifyOperationalBindingArgumentData/initiator/roleB-initiates		modifyRoleBInitiates
TerminateOperationalBindingArgumentData/initiator/roleB-initiates	terminateRoleBInitiates

EstablishOperationalBindingArgumentData/initiator/symmetric		establishSymmetric
ModifyOperationalBindingArgumentData/initiator/symmetric		modifySymmetric
TerminateOperationalBindingArgumentData/initiator/symmetric		terminateSymmetric

TerminateOperationalBindingArgumentData/terminateAt			terminateAtTime
TerminateOperationalBindingResultData/terminateAt			terminateAtGeneralizedTime


#.REGISTER
DSEType	    			B "2.5.12.0" "id-doa-dseType"
SupplierInformation 		B "2.5.12.5" "id-doa-supplierKnowledge"
ConsumerInformation 		B "2.5.12.6" "id-doa-consumerKnowledge"
SupplierAndConsumers 		B "2.5.12.7" "id-doa-secondaryShadows"

HierarchicalAgreement			B "dop.agreement.2.5.19.2" 	"hierarchical-agreement"
SuperiorToSubordinate			B "dop.establish.rolea.2.5.19.2" "hierarchical-establish-rolea"
SuperiorToSubordinateModification	B "dop.modify.rolea.2.5.19.2" "hierarchical-modify-rolea"
SubordinateToSuperior			B "dop.establish.roleb.2.5.19.2" "hierarchical-establish-roleb"
SubordinateToSuperior			B "dop.modify.roleb.2.5.19.2"  "hierarchical-modify-roleb"

NonSpecificHierarchicalAgreement	B "dop.agreement.2.5.19.3" 	"non-specific-hierarchical-agreement"
NHOBSuperiorToSubordinate		B "dop.establish.rolea.2.5.19.3"	"non-specific-hierarchical-establish-rolea"
NHOBSuperiorToSubordinate		B "dop.modify.rolea.2.5.19.3" "non-specific-hierarchical-modify-rolea"
NHOBSubordinateToSuperior		B "dop.establish.roleb.2.5.19.3" "non-specific-hierarchical-establish-roleb"
NHOBSubordinateToSuperior		B "dop.modify.roleb.2.5.19.3"  "non-specific-hierarchical-modify-roleb"

ACIItem		B	"2.5.24.4" "id-aca-prescriptiveACI"
ACIItem		B	"2.5.24.5" "id-aca-entryACI"
ACIItem		B	"2.5.24.6" "id-aca-subentryACI"

#.FN_PARS	OBJECT_IDENTIFIER
	FN_VARIANT = _str VAL_PTR = &binding_type

#.FN_BODY	OBJECT_IDENTIFIER
  const char *name;

  %(DEFAULT_BODY)s

  if(check_col(pinfo->cinfo, COL_INFO)) {
    name = get_ber_oid_name(binding_type);
    col_append_fstr(pinfo->cinfo, COL_INFO, " %%s", name ? name : binding_type);
  }

#.FN_BODY	EstablishSymmetric

  offset = call_dop_oid_callback("dop.establish.symmetric", tvb, offset, pinfo, tree, "symmetric");

#.FN_BODY	EstablishRoleAInitiates

  offset = call_dop_oid_callback("dop.establish.rolea", tvb, offset, pinfo, tree, "roleA");

#.FN_BODY	EstablishRoleBInitiates

  offset = call_dop_oid_callback("dop.establish.roleb", tvb, offset, pinfo, tree, "roleB");

#.FN_BODY	ModifySymmetric

  offset = call_dop_oid_callback("dop.modify.symmetric", tvb, offset, pinfo, tree, "symmetric");

#.FN_BODY	ModifyRoleAInitiates

  offset = call_dop_oid_callback("dop.modify.rolea", tvb, offset, pinfo, tree, "roleA");

#.FN_BODY	ModifyRoleBInitiates

  offset = call_dop_oid_callback("dop.modify.roleb", tvb, offset, pinfo, tree, "roleB");

#.FN_BODY	TerminateSymmetric

  offset = call_dop_oid_callback("dop.terminate.symmetric", tvb, offset, pinfo, tree, "symmetric");

#.FN_BODY	TerminateRoleAInitiates

  offset = call_dop_oid_callback("dop.terminate.rolea", tvb, offset, pinfo, tree, "roleA");

#.FN_BODY	TerminateRoleBInitiates

  offset = call_dop_oid_callback("dop.terminate.roleb", tvb, offset, pinfo, tree, "roleB");

#.FN_BODY	T_agreement

  offset = call_dop_oid_callback("dop.agreement", tvb, offset, pinfo, tree, NULL);

#.FN_BODY	T_symmetric

  offset = call_dop_oid_callback("dop.establish.symmetric", tvb, offset, pinfo, tree, "symmetric"); 

#.FN_BODY	T_roleA_replies

  offset = call_dop_oid_callback("dop.establish.rolea", tvb, offset, pinfo, tree, "roleA");

#.FN_BODY	T_roleB_replies

  offset = call_dop_oid_callback("dop.establish.roleb", tvb, offset, pinfo, tree, "roleB");

#.FN_BODY	T_agreementProposal

  offset = call_dop_oid_callback("dop.agreement", tvb, offset, pinfo, tree, NULL);

#.FN_BODY	ResultNewAgreement

  offset = call_dop_oid_callback("dop.agreement", tvb, offset, pinfo, tree, NULL);

#.FN_BODY	ArgumentNewAgreement

  offset = call_dop_oid_callback("dop.agreement", tvb, offset, pinfo, tree, NULL);


#.FN_PARS INTEGER
	VAL_PTR	= &value

#.FN_BODY INTEGER
	guint32	value;

	%(DEFAULT_BODY)s

	if (check_col(pinfo->cinfo, COL_INFO)) {
		if(hf_index == hf_dop_identifier) {
			col_append_fstr(pinfo->cinfo, COL_INFO, " id=%%d", value);
		} else if (hf_index == hf_dop_version) {
			col_append_fstr(pinfo->cinfo, COL_INFO, ",%%d", value);
		}
  	}

#.FN_PARS Precedence VAL_PTR = &precedence

#.FN_BODY Precedence
  guint32 precedence = 0;

  %(DEFAULT_BODY)s

  proto_item_append_text(tree, " precedence=%%d", precedence);

