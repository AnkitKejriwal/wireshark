# ansi_map.cnf
# ansi_map conformation file
# Copyright 2005-2006 Anders Broman 
# $Id$


#.EXPORTS

#.PDU
AuthenticationDirective
AuthenticationDirectiveRes

OriginationRequest
OriginationRequestRes

#.NO_EMIT

#.TYPE_RENAME

#.FIELD_RENAME

#.FN_BODY InvokeParameters
	proto_tree_add_item(tree, hf_ansi_map_invokeParameters, tvb, offset,-1,FALSE);
	offset = dissect_invokeData(pinfo, tree, tvb, offset);

#.FN_BODY ReturnParameters
	proto_tree_add_item(tree, hf_ansi_map_returnResult, tvb, offset,-1,FALSE);
	offset = dissect_returnData(pinfo, tree, tvb, offset);

#.FN_BODY ErrorParameters

#.FN_BODY RejectParameters

#.FN_PARS PrivateOperationCode

VAL_PTR = &OperationCode

#.FN_BODY PrivateOperationCode
 %(DEFAULT_BODY)s
 proto_tree_add_item(tree, hf_ansi_map_op_code_fam, tvb, offset-2,1,FALSE);
 proto_tree_add_item(tree, hf_ansi_map_op_code, tvb, offset-1,1,FALSE);

#.FN_PARS MINType

VAL_PTR = &parameter_tvb

#.FN_BODY MINType
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_min_type(parameter_tvb,pinfo,tree);
	}

#.FN_PARS DigitsType

VAL_PTR = &parameter_tvb

#.FN_BODY DigitsType
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_digits_type(parameter_tvb,pinfo,tree);
	}

#.FN_PARS Subaddress

VAL_PTR = &parameter_tvb

#.FN_BODY Subaddress
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_subaddress(parameter_tvb,pinfo,tree);
	}

# 6.5.2.3 AlertCode
#.FN_PARS AlertCode
VAL_PTR = &parameter_tvb

#.FN_BODY AlertCode
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_alertcode(parameter_tvb,pinfo,tree);
	}

# 6.5.2.5 AnnouncementCode
#.FN_PARS AnnouncementCode
VAL_PTR = &parameter_tvb

#.FN_BODY AnnouncementCode
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_announcementcode(parameter_tvb,pinfo,tree);
	}

# 6.5.2.14 AuthorizationPeriod
#.FN_PARS AuthorizationPeriod
VAL_PTR = &parameter_tvb

#.FN_BODY AuthorizationPeriod
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_authorizationperiod(parameter_tvb,pinfo,tree);
	}


# 6.5.2.16 BillingID
#.FN_PARS BillingID
VAL_PTR = &parameter_tvb

#.FN_BODY BillingID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_billingid(parameter_tvb,pinfo,tree);
	}

# 6.5.2.20 CallingFeaturesIndicator
#.FN_PARS CallingFeaturesIndicator
VAL_PTR = &parameter_tvb

#.FN_BODY CallingFeaturesIndicator
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_callingfeaturesindicator(parameter_tvb,pinfo,tree);
	}
# 6.5.2.29 CDMACallMode
#.FN_PARS CDMACallMode
VAL_PTR = &parameter_tvb

#.FN_BODY CDMACallMode
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_cdmacallmode(parameter_tvb,pinfo,tree);
	}
# 6.5.2.41 CDMAStationClassMark
#.FN_PARS CDMAStationClassMark
VAL_PTR = &parameter_tvb

#.FN_BODY CDMAStationClassMark
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_cdmastationclassmark(parameter_tvb,pinfo,tree);
	}

# 6.5.2.47 ChannelData
#.FN_PARS ChannelData
VAL_PTR = &parameter_tvb

#.FN_BODY ChannelData
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_channeldata(parameter_tvb,pinfo,tree);
	}

# 6.5.2.50 ConfidentialityModes
#.FN_PARS ConfidentialityModes
VAL_PTR = &parameter_tvb

#.FN_BODY ConfidentialityModes
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_confidentialitymodes(parameter_tvb,pinfo,tree);
	}

# 6.5.2.53 DeniedAuthorizationPeriod
#.FN_PARS DeniedAuthorizationPeriod
VAL_PTR = &parameter_tvb

#.FN_BODY DeniedAuthorizationPeriod
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_deniedauthorizationperiod(parameter_tvb,pinfo,tree);
	}

# 6.5.2.64 ExtendedMSCID
#.FN_PARS ExtendedMSCID
VAL_PTR = &parameter_tvb

#.FN_BODY ExtendedMSCID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_extendedmscid(parameter_tvb,pinfo,tree);
	}

# 6.5.2.65 ExtendedSystemMyTypeCode
#.FN_PARS ExtendedSystemMyTypeCode
VAL_PTR = &parameter_tvb

#.FN_BODY ExtendedSystemMyTypeCode
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_extendedsystemmytypecode(parameter_tvb,pinfo,tree);
	}
#6.5.2.71 HandoffState
#.FN_PARS HandoffState
VAL_PTR = &parameter_tvb

#.FN_BODY HandoffState
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_handoffstate(parameter_tvb,pinfo,tree);
	}

# 6.5.2.72 InterMSCCircuitID
#.FN_PARS InterMSCCircuitID
VAL_PTR = &parameter_tvb

#.FN_BODY InterMSCCircuitID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_intermsccircuitid(parameter_tvb,pinfo,tree);
	}

# 6.5.2.78 MessageWaitingNotificationCount 
#.FN_PARS MessageWaitingNotificationCount
VAL_PTR = &parameter_tvb

#.FN_BODY MessageWaitingNotificationCount
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_messagewaitingnotificationcount(parameter_tvb,pinfo,tree);
	}

# 6.5.2.79 MessageWaitingNotificationType
#.FN_PARS MessageWaitingNotificationType
VAL_PTR = &parameter_tvb

#.FN_BODY MessageWaitingNotificationType
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_messagewaitingnotificationtype(parameter_tvb,pinfo,tree);
	}


# 6.5.2.82 MSCID
#.FN_PARS MSCID
VAL_PTR = &parameter_tvb

#.FN_BODY MSCID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_mscid(parameter_tvb,pinfo,tree);
	}
# 6.5.2.84 MSLocation
#.FN_PARS MSLocation
VAL_PTR = &parameter_tvb

#.FN_BODY MSLocation
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_mscid(parameter_tvb,pinfo,tree);
	}

# 6.5.2.85 NAMPSCallMode
#.FN_PARS NAMPSCallMode
VAL_PTR = &parameter_tvb

#.FN_BODY NAMPSCallMode
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_nampscallmode(parameter_tvb,pinfo,tree);
	}

# 6.5.2.86 NAMPSChannelData
#.FN_PARS NAMPSChannelData
VAL_PTR = &parameter_tvb

#.FN_BODY NAMPSChannelData
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_nampschanneldata(parameter_tvb,pinfo,tree);
	}

# 6.5.2.88 OneTimeFeatureIndicator
#.FN_PARS OneTimeFeatureIndicator
VAL_PTR = &parameter_tvb

#.FN_BODY OneTimeFeatureIndicator
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_onetimefeatureindicator(parameter_tvb,pinfo,tree);
	}

# 6.5.2.90 OriginationTriggers
#.FN_PARS OriginationTriggers
VAL_PTR = &parameter_tvb

#.FN_BODY OriginationTriggers
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_originationtriggers(parameter_tvb,pinfo,tree);
	}

# 6.5.2.91 PACAIndicator
#.FN_PARS PACAIndicator
VAL_PTR = &parameter_tvb

#.FN_BODY PACAIndicator
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_pacaindicator(parameter_tvb,pinfo,tree);
	}

# 6.5.2.93 PC_SSN
#.FN_PARS PC-SSN
VAL_PTR = &parameter_tvb

#.FN_BODY PC-SSN
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_pc_ssn(parameter_tvb,pinfo,tree);
	}

# 6.5.2.94 PilotBillingID
#.FN_PARS PilotBillingID
VAL_PTR = &parameter_tvb

#.FN_BODY PilotBillingID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_pilotbillingid(parameter_tvb,pinfo,tree);
	}


# 6.5.2.158 TerminationTreatment
#.FN_PARS TerminationTreatment
VAL_PTR = &parameter_tvb

#.FN_BODY TerminationTreatment
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_terminationtreatment(parameter_tvb,pinfo,tree);
	}

# 6.5.2.160 TransactionCapability
#.FN_PARS TransactionCapability
VAL_PTR = &parameter_tvb

#.FN_BODY TransactionCapability
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_transactioncapability(parameter_tvb,pinfo,tree);
	}

# 6.5.2.aj SecondInterMSCCircuitID
# -- XXX Same code as ISLPinformation???

# 6.5.2.bw CallingPartyName N.S0012-0 v 1.0
#.FN_PARS CallingPartyName
VAL_PTR = &parameter_tvb

#.FN_BODY CallingPartyName
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_callingpartyname(parameter_tvb,pinfo,tree);
	}

# 6.5.2.df TriggerCapability
#.FN_PARS TriggerCapability
VAL_PTR = &parameter_tvb

#.FN_BODY TriggerCapability
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_triggercapability(parameter_tvb,pinfo,tree);
	}

# 6.5.2.dj WINOperationsCapability
#.FN_PARS WINOperationsCapability
VAL_PTR = &parameter_tvb

#.FN_BODY WINOperationsCapability
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_winoperationscapability(parameter_tvb,pinfo,tree);
	}

# 6.5.2.ek ControlNetworkID
#.FN_PARS ControlNetworkID
VAL_PTR = &parameter_tvb

#.FN_BODY ControlNetworkID
	tvbuff_t *parameter_tvb = NULL;
%(DEFAULT_BODY)s
	if (parameter_tvb){
		dissect_ansi_map_controlnetworkid(parameter_tvb,pinfo,tree);
	}

	 
#.TYPE_ATTR
ActionCode   TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_ActionCode_vals)
AuthenticationCapability TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_AuthenticationCapability_vals) 
AlertResult   TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_AlertResult_result_vals)
AvailabilityType TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_AvailabilityType_vals)
CancellationType TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_CancellationType_vals)
GeographicAuthorization TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_GeographicAuthorization_vals)

CountUpdateReport TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_CountUpdateReport_vals)
ControlChannelMode  TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_ControlChannelMode_vals)
PageIndicator  TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_PageIndicator_vals)
SMS-AccessDeniedReason  TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_SMS_AccessDeniedReason_vals)
SMS-CauseCode  TYPE = FT_UINT8  DISPLAY = BASE_DEC  STRINGS = VALS(ansi_map_SMS_CauseCode_vals)
SMS-ChargeIndicator TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_SMS_ChargeIndicator_vals)
SMS-NotificationIndicator TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_SMS_NotificationIndicator_vals)
SMS-TeleserviceIdentifier TYPE = FT_UINT16  DISPLAY = BASE_DEC STRINGS = VALS(ansi_map_SMS_TeleserviceIdentifier_vals)
TDMABandwidth TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x0f STRINGS = VALS(ansi_map_TDMABandwidth_vals)
TDMAServiceCode TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_TDMAServiceCode_vals)
OTASP-ResultCode TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_OTASP_ResultCode_vals)
ServiceIndicator TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_ServiceIndicator_vals)
TerminationAccessType TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_TerminationAccessType_vals)
TerminationTreatment  TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_TerminationTreatment_vals)
SignalingMessageEncryptionReport TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_SMEReport_vals)
VoicePrivacyReport TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_VoicePrivacyReport_vals)
PreferredLanguageIndicator TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_PreferredLanguageIndicator_vals)
SetupResult TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_SetupResult_vals)
UniqueChallengeReport TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_UniqueChallengeReport_vals)
ISLPInformation TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_islp_type_vals)
ServiceRedirectionCause  TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_ServiceRedirectionCause_type_vals)
SSDUpdateReport   TYPE = FT_UINT16  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_SSDUpdateReport_vals)
ReauthenticationReport   TYPE = FT_UINT8  DISPLAY = BASE_DEC   STRINGS = VALS(ansi_map_ReauthenticationReport_vals)
MSIDUsage TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x03 STRINGS = VALS(ansi_MSIDUsage_m_or_i_vals)
BSMCStatus  TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x03 STRINGS = VALS(ansi_map_BSMCStatus_vals)
PagingFrameClass   TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x03 STRINGS = VALS(ansi_map_PagingFrameClass_vals)
ServicesResult TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x03 STRINGS = VALS(ansi_map_ServicesResult_ppr_vals)
SOCStatus TYPE = FT_UINT8  DISPLAY = BASE_DEC  BITMASK = 0x03 STRINGS = VALS(ansi_map_SOCStatus_vals)
#.END
