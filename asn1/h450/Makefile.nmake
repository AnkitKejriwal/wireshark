## Use: $(MAKE) /$(MAKEFLAGS) -f makefile.nmake
#
# $Id$

include ../../config.nmake

UNIX2DOS=$(PERL) ../../tools/unix2dos.pl

PROTOCOL_NAME=h450
H450_FILES=packet-$(PROTOCOL_NAME).c
H450_ROS_FILES=packet-$(PROTOCOL_NAME)-ros.c packet-$(PROTOCOL_NAME)-ros.h
DISSECTOR_FILES=$(H450_FILES) $(H450_ROS_FILES)
H450_ASN=H4501-Supplementary-ServiceAPDU-Structure.asn Addressing-Data-Elements.asn H225-generic-parameters-definition.asn Manufacturer-specific-service-extension-definition.asn H4501-General-Error-List.asn
H450_OP_ASN=Call-Transfer-Operations.asn Call-Diversion-Operations.asn Call-Hold-Operations.asn Call-Park-Pickup-Operations.asn Call-Waiting-Operations.asn Message-Waiting-Indication-Operations.asn Name-Operations.asn Call-Completion-Operations.asn Call-Offer-Operations.asn Call-Intrusion-Operations.asn Common-Information-Operations.asn 
H450_ROS_ASN=../ros/Remote-Operations-Information-Objects.asn Remote-Operations-Apdus.asn

all: generate_dissector

generate_dissector: $(DISSECTOR_FILES)

$(H450_FILES): ../../tools/asn2wrs.py $(H450_ASN) $(H450_OP_ASN) packet-$(PROTOCOL_NAME)-template.c $(PROTOCOL_NAME).cnf
!IFDEF PYTHON
	$(PYTHON) "../../tools/asn2wrs.py" -c $(PROTOCOL_NAME).cnf -s packet-$(PROTOCOL_NAME)-template $(H450_ASN) $(H450_OP_ASN)
!ELSE
	@echo Error: You need Python to use asn2wrs.py
	@exit 1
!ENDIF

$(H450_ROS_FILES): ../../tools/asn2wrs.py $(H450_ROS_ASN) packet-$(PROTOCOL_NAME)-ros-template.c $(PROTOCOL_NAME)-ros.cnf ../ros/ros-inv.cnf ../ros/ros-res.cnf ../ros/ros-err.cnf ../ros/ros-rej.cnf
!IFDEF PYTHON
	$(PYTHON) "../../tools/asn2wrs.py" -e -p $(PROTOCOL_NAME).ros -I ../ros -c $(PROTOCOL_NAME)-ros.cnf -o $(PROTOCOL_NAME)-ros -s packet-$(PROTOCOL_NAME)-ros-template $(H450_ROS_ASN)
!ELSE
	@echo Error: You need Python to use asn2wrs.py
	@exit 1
!ENDIF

clean:
	rm -f parsetab.py parsetab.pyc $(DISSECTOR_FILES)

distclean: clean

maintainer-clean: distclean

# Fix EOL in generated dissectors. Cygwin's python generates files with 
# mixed EOL styles, which can't be commited to the SVN repository.
# Stuff included from template and "cnf" files has "\r\n" on windows, while 
# the generated stuff has "\n".

fix_eol: generate_dissector
	move packet-$(PROTOCOL_NAME).c packet-$(PROTOCOL_NAME).c.tmp
	move packet-$(PROTOCOL_NAME)-ros.c packet-$(PROTOCOL_NAME)-ros.c.tmp
	move packet-$(PROTOCOL_NAME)-ros.h packet-$(PROTOCOL_NAME)-ros.h.tmp
	$(UNIX2DOS) < packet-$(PROTOCOL_NAME).c.tmp > packet-$(PROTOCOL_NAME).c
	$(UNIX2DOS) < packet-$(PROTOCOL_NAME)-ros.c.tmp > packet-$(PROTOCOL_NAME)-ros.c
	$(UNIX2DOS) < packet-$(PROTOCOL_NAME)-ros.h.tmp > packet-$(PROTOCOL_NAME)-ros.h
	del /f packet-$(PROTOCOL_NAME).c.tmp packet-$(PROTOCOL_NAME)-ros.c.tmp packet-$(PROTOCOL_NAME)-ros.h.tmp

copy_files: generate_dissector fix_eol
	xcopy packet-$(PROTOCOL_NAME).c ..\..\epan\dissectors /d /y
	xcopy packet-$(PROTOCOL_NAME)-ros.c ..\..\epan\dissectors /d /y
	xcopy packet-$(PROTOCOL_NAME)-ros.h ..\..\epan\dissectors /d /y
