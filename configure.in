# $Id: configure.in,v 1.15 1998/11/17 04:28:43 gerald Exp $
dnl Process this file with autoconf to produce a configure script.
AC_INIT(etypes.h)

AM_INIT_AUTOMAKE(ethereal, 0.4.2)

dnl Check for CPU / vendor / OS
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB

# Create DATAFILE_DIR #define for config.h
DATAFILE_DIR=$sysconfdir
DATAFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=$ac_default_prefix
    test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
    eval echo "$DATAFILE_DIR"
)`
AC_DEFINE_UNQUOTED(DATAFILE_DIR,"$DATAFILE_DIR")
AC_SUBST(DATAFILE_DIR)

# If we're running Solaris, and LD_LIBRARY_PATH is defined, add it as a
# link directory.
case "$host_os" in
  solaris*)
    AC_MSG_CHECKING(for LD_LIBRARY_PATH, since you appear to be running Solaris)
    if test x$LD_LIBRARY_PATH != x ; then
      LIBS="$LIBS -R$LD_LIBRARY_PATH"
      AC_MSG_RESULT(yes -- added LD_LIBRARY_PATH to run-time linker path)
    else
      AC_MSG_RESULT(no -- this may be a problem in a few seconds)
    fi
  ;;
esac

# GTK checks
AM_PATH_GTK(1.0.0, CFLAGS="$CFLAGS $GTK_CFLAGS" LIBS="$LIBS $GTK_LIBS",
                   AC_MSG_ERROR(GTK+ distribution not found.))

# Pcap checks
AC_CHECK_HEADER(net/bpf.h,, AC_MSG_ERROR(Header file net/bpf.h not found.))
AC_CHECK_HEADER(pcap.h,, AC_MSG_ERROR(Header file pcap.h not found.))
AC_CHECK_LIB(pcap, pcap_open_offline,, AC_MSG_ERROR(Library libpcap not found.))

# Evidently, some systems have pcap.h, etc. in */include/pcap
AC_MSG_CHECKING(for extraneous pcap header directories)
found_pcap_dir=""
for pcap_dir in /usr/include/pcap /usr/local/include/pcap
do
  if test -d $pcap_dir ; then
    LIBS="$LIBS -L$pcap_dir"
    found_pcap_dir=" $found_pcap_dir -L$pcap_dir"
  fi
done

if test "$found_pcap_dir" != "" ; then
  AC_MSG_RESULT(found --$found_pcap_dir added to LIBS)
else
  AC_MSG_RESULT(not found)
fi

# Wiretap check
AC_MSG_CHECKING(whether to include wiretap library)
AC_ARG_WITH(wiretap,
[  --with-wiretap          Include wiretap library.
  --without-wiretap       Don't include wiretap library (default)],
	[ case "$withval" in
		yes)
			AC_MSG_RESULT(yes)
			AC_DEFINE(WITH_WIRETAP)
			CFLAGS="$CFLAGS -Iwiretap"
			LIBWIRETAP_A="wiretap/libwiretap.a"
			;;
		*)
			AC_MSG_RESULT(no)
			LIBWIRETAP_A=""
			;;
	esac ],
	AC_MSG_RESULT(no)
)
AC_SUBST(LIBWIRETAP_A)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h strings.h sys/ioctl.h sys/time.h unistd.h stdarg.h)

AC_CHECK_HEADERS(sys/sockio.h sys/types.h netinet/in.h)

dnl Checks for typedefs, structures, and compiler characteristics.
# AC_C_CONST

# We need to know whether "struct sockaddr" has an "sa_len" member
# for get_interface_list().

AC_ETHEREAL_STRUCT_SA_LEN

# We must know our byte order
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_CHECK_FUNC(socket,, AC_MSG_ERROR(Function 'socket' not found.))

# If there's a system out there that has snprintf and _doesn't_ have vsnprintf,
# then this won't work.
SNPRINTF_C=""
SNPRINTF_O=""
AC_CHECK_FUNC(snprintf, SNPRINTF_O="",
  SNPRINTF_O="snprintf.o" [AC_DEFINE(NEED_SNPRINTF_H)])
if test "$ac_cv_func_snprintf" = no ; then
  SNPRINTF_C="snprintf.c"
  SNPRINTF_O="snprintf.o"
fi
AC_SUBST(SNPRINTF_C)
AC_SUBST(SNPRINTF_O)

AM_CONFIG_HEADER(config.h)
AC_CONFIG_SUBDIRS(wiretap)
AC_OUTPUT(Makefile)
