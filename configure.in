# $Id: configure.in,v 1.27 1999/06/24 16:25:58 gram Exp $
dnl Process this file with autoconf to produce a configure script.
AC_INIT(etypes.h)

AM_INIT_AUTOMAKE(ethereal, 0.6.3)

dnl Check for CPU / vendor / OS
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB

# If we're running gcc, add '-Wall' to CFLAGS.
AC_MSG_CHECKING(to see if we can add '-Wall' to CFLAGS)
if test x$GCC != x ; then
  CFLAGS="-Wall $CFLAGS"
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

# Create DATAFILE_DIR #define for config.h
DATAFILE_DIR=$sysconfdir
DATAFILE_DIR=`(
    test "x$prefix" = xNONE && prefix=$ac_default_prefix
    test "x$exec_prefix" = xNONE && exec_prefix=${prefix}
    eval echo "$DATAFILE_DIR"
)`
AC_DEFINE_UNQUOTED(DATAFILE_DIR,"$DATAFILE_DIR")
AC_SUBST(DATAFILE_DIR)

# If we're running Solaris, and LD_LIBRARY_PATH is defined, add it as a
# link directory.
case "$host_os" in
  solaris*)
    AC_MSG_CHECKING(for LD_LIBRARY_PATH, since you appear to be running Solaris)
    if test x$LD_LIBRARY_PATH != x ; then
      LIBS="$LIBS -R$LD_LIBRARY_PATH"
      AC_MSG_RESULT(yes -- added LD_LIBRARY_PATH to run-time linker path)
    else
      AC_MSG_RESULT(no -- this may be a problem in a few seconds)
    fi
  ;;
esac

# GTK checks
AM_PATH_GTK(1.0.0, CFLAGS="$CFLAGS $GTK_CFLAGS" LIBS="$LIBS $GTK_LIBS",
                   AC_MSG_ERROR(GTK+ distribution not found.))

# Evidently, some systems have pcap.h, etc. in */include/pcap
AC_MSG_CHECKING(for extraneous pcap header directories)
found_pcap_dir=""
for pcap_dir in /usr/include/pcap /usr/local/include/pcap
do
  if test -d $pcap_dir ; then
    LIBS="$LIBS -L$pcap_dir"
    CFLAGS="$CFLAGS -I$pcap_dir"
    CPPFLAGS="$CPPFLAGS -I$pcap_dir"
    found_pcap_dir=" $found_pcap_dir -L$pcap_dir"
  fi
done

if test "$found_pcap_dir" != "" ; then
  AC_MSG_RESULT(found --$found_pcap_dir added to LIBS)
else
  AC_MSG_RESULT(not found)
fi

# Pcap checks
AC_CHECK_HEADER(net/bpf.h,, AC_MSG_ERROR(Header file net/bpf.h not found.))
AC_CHECK_HEADER(pcap.h,, AC_MSG_ERROR(Header file pcap.h not found.))
AC_CHECK_LIB(pcap, pcap_open_offline,, AC_MSG_ERROR(Library libpcap not found.))

# Wiretap check
AC_MSG_CHECKING(whether to include wiretap library)
AC_ARG_WITH(wiretap,
[  --with-wiretap          Include wiretap library.
  --without-wiretap       Don't include wiretap library (default)],
	[ case "$withval" in
		yes)
			AC_MSG_RESULT(yes)
			AC_DEFINE(WITH_WIRETAP)
			WIRETAP_DIR="wiretap"
			if test x$WIRETAP_DIR != x ; then
				CFLAGS="$CFLAGS -Iwiretap"
				LIBWIRETAP_A="wiretap/libwiretap.a"
				SUBDIRS="$SUBDIRS wiretap"
			fi
			;;
		*)
			AC_MSG_RESULT(no)
			LIBWIRETAP_A=""
			WIRETAP_DIR=""
			;;
	esac ],
	AC_MSG_RESULT(no)
)
AC_SUBST(LIBWIRETAP_A)
AC_SUBST(SUBDIRS)

dnl ipv6 check
AC_ARG_ENABLE(ipv6,
[  --enable-ipv6           use ipv6 name resolution, if available.  [default=yes]],,enable_ipv6=yes)

AC_MSG_CHECKING(whether to enable ipv6 name resolution if available)
if test "x$enable_ipv6" = "xno" ; then
	AC_MSG_RESULT(no)
else
	AC_MSG_RESULT(yes)
	AC_ETHEREAL_IPV6_STACK
fi


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h stdarg.h)

AC_CHECK_HEADERS(sys/sockio.h sys/types.h netinet/in.h)


dnl SNMP Check
AC_ARG_ENABLE(snmp,
[  --enable-snmp           use SNMP library, if available.  [default=yes]],,enable_snmp=yes)

SNMP_A=''
SNMP_O=''
AC_MSG_CHECKING(whether to use SNMP library if available)
if test "x$enable_snmp" = "xno" ; then
	AC_MSG_RESULT(no)
else
	AC_MSG_RESULT(yes)
	AC_CHECK_HEADERS(ucd-snmp/snmp.h snmp/snmp.h)
	AC_CHECK_LIB(snmp, asn_parse_header,
		[
		SNMP_A=-lsnmp
		SNMP_O=packet-snmp.o
		], )
fi
AC_SUBST(SNMP_A)
AC_SUBST(SNMP_O)

dnl Checks for typedefs, structures, and compiler characteristics.
# AC_C_CONST

# We need to know whether "struct sockaddr" has an "sa_len" member
# for get_interface_list().

AC_ETHEREAL_STRUCT_SA_LEN

# We must know our byte order
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_CHECK_FUNC(socket,, AC_MSG_ERROR(Function 'socket' not found.))

# If there's a system out there that has snprintf and _doesn't_ have vsnprintf,
# then this won't work.
SNPRINTF_C=""
SNPRINTF_O=""
AC_CHECK_FUNC(snprintf, SNPRINTF_O="",
  SNPRINTF_O="snprintf.o" [AC_DEFINE(NEED_SNPRINTF_H)])
if test "$ac_cv_func_snprintf" = no ; then
  SNPRINTF_C="snprintf.c"
  SNPRINTF_O="snprintf.o"
fi
AC_SUBST(SNPRINTF_C)
AC_SUBST(SNPRINTF_O)

AC_CHECK_FUNC(strerror, STRERROR_O="",
  STRERROR_O="strerror.o" [AC_DEFINE(NEED_STRERROR_H)])
if test "$ac_cv_func_strerror" = no ; then
  STRERROR_C="strerror.c"
  STRERROR_O="strerror.o"
fi
AC_SUBST(STRERROR_C)
AC_SUBST(STRERROR_O)

AM_CONFIG_HEADER(config.h)
if test x$WIRETAP_DIR != x ; then
	AC_CONFIG_SUBDIRS($WIRETAP_DIR)
fi
AC_OUTPUT(Makefile)
