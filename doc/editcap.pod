
=head1 NAME

editcap - Edit and/or translate the format of capture files

=head1 SYNOPSYS

B<editcap>
S<[ B<-c> packets per file]>
S<[ B<-E> error probability]>
S<[ B<-F> file format ]>
S<[ B<-h> ]>
S<[ B<-r> ]>
S<[ B<-s> snaplen ]>
S<[ B<-t> time adjustment ]>
S<[ B<-T> encapsulation type ]>
S<[ B<-v> ]>
I<infile>
I<outfile>
S<[ I<record#>[-I<record#>] ... ]>

=head1 DESCRIPTION

B<Editcap> is a program that reads a saved capture file and writes some
or all of the packets in that capture file to another capture file. 
B<Editcap> knows how to read B<libpcap> capture files, including those
of B<tcpdump>, B<Ethereal>, and other tools that write captures in that
format.  

B<Editcap> can read / import the following file formats:

=over 4

=item *
libpcap/WinPcap, tcpdump and various other tools using tcpdump's capture format

=item *
B<snoop> and B<atmsnoop>

=item *
Shomiti/Finisar B<Surveyor> captures

=item *
Novell B<LANalyzer> captures

=item *
Microsoft B<Network Monitor> captures

=item *
AIX's B<iptrace> captures

=item *
Cinco Networks B<NetXRay> captures

=item *
Network Associates Windows-based B<Sniffer> captures

=item *
Network General/Network Associates DOS-based B<Sniffer> (compressed or uncompressed) captures

=item *
AG Group/WildPackets B<EtherPeek>/B<TokenPeek>/B<AiroPeek>/B<EtherHelp>/B<PacketGrabber> captures

=item *
B<RADCOM>'s WAN/LAN analyzer captures

=item *
Network Instruments B<Observer> version 9 captures

=item *
B<Lucent/Ascend> router debug output

=item *
files from HP-UX's B<nettl>

=item *
B<Toshiba's> ISDN routers dump output

=item *
the output from B<i4btrace> from the ISDN4BSD project

=item *
traces from the B<EyeSDN> USB S0.

=item *
the output in B<IPLog> format from the Cisco Secure Intrusion Detection System

=item *
B<pppd logs> (pppdump format)

=item *
the output from VMS's B<TCPIPtrace>/B<TCPtrace>/B<UCX$TRACE> utilities

=item *
the text output from the B<DBS Etherwatch> VMS utility

=item *
Visual Networks' B<Visual UpTime> traffic capture

=item *
the output from B<CoSine> L2 debug

=item *
the output from Accellent's B<5Views> LAN agents

=item *
Endace Measurement Systems' ERF format captures 

=item *
Linux Bluez Bluetooth stack B<hcidump -w> traces

=back

There is no need to tell B<Editcap> what type of
file you are reading; it will determine the file type by itself. 
B<Editcap> is also capable of reading any of these file formats if they
are compressed using gzip.  B<Editcap> recognizes this directly from the
file; the '.gz' extension is not required for this purpose.

By default, it writes the capture file in B<libpcap> format, and writes
all of the packets in the capture file to the output file.  The B<-F>
flag can be used to specify the format in which to write the capture
file; it can write the file in B<libpcap> format (standard B<libpcap>
format, a modified format used by some patched versions of B<libpcap>,
the format used by Red Hat Linux 6.1, or the format used by SuSE Linux
6.3), B<snoop> format, uncompressed B<Sniffer> format, Microsoft
B<Network Monitor> 1.x format, the format used by Windows-based versions
of the B<Sniffer> software, and the format used by Visual Networks'
software.

A list of packet numbers can be specified on the command line; the
packets with those numbers will I<not> be written to the capture file,
unless the B<-r> flag is specified, in which case I<only> those packets
will be written to the capture file.  Ranges of packet numbers can be
specified as I<start>-I<end>, referring to all packets from I<start> to
I<end> (removing them all if B<-r> isn't specified, including them all
if B<-r> is specified).

If the B<-c> flag is used to specify the amount of packets in a capture
file, the output file will be created with a suffix -nnnnn. The suffix
starts at 00000. No more then the specified number of packets are written
in the output file before the next output file is opened. 

If the B<-s> flag is used to specify a snapshot length, frames in the
input file with more captured data than the specified snapshot length
will have only the amount of data specified by the snapshot length
written to the output file.  This may be useful if the program that is
to read the output file cannot handle packets larger than a certain size
(for example, the versions of snoop in Solaris 2.5.1 and Solaris 2.6
appear to reject Ethernet frames larger than the standard Ethernet MTU,
making them incapable of handling gigabit Ethernet captures if jumbo
frames were used).

If the B<-t> flag is used to specify a time adjustment, the specified
adjustment will be applied to all selected frames in the capture file.
The adjustment is specified as [-]I<seconds>[I<.fractional seconds>].
For example, B<-t> 3600 advances the timestamp on selected frames by one
hour while B<-t> -0.5 reduces the timestamp on selected frames by
one-half second.  This feature is useful when synchronizing dumps
collected on different machines where the time difference between the
two machines is known or can be estimated.

If the B<-T> flag is used to specify an encapsulation type, the
encapsulation type of the output capture file will be forced to the
specified type, rather than being the type appropriate to the
encapsulation type of the input capture file.  Note that this merely
forces the encapsulation type of the output file to be the specified
type; the packet headers of the packets will not be translated from the
encapsulation type of the input capture file to the specified
encapsulation type (for example, it will not translate an Ethernet
capture to an FDDI capture if an Ethernet capture is read and 'B<-T
fddi>' is specified).

If the B<-E> flag is used to specify a probability (between 0.0 and
1.0 inclusive), Editcap uses that probability to apply errors to each
data byte in the file.  For instance, a probability of 0.02 means that
each byte has a 2% chance of having an error.  This option is meant to
be used for fuzz-testing protocol dissectors.

=head1 OPTIONS

=over 4

=item -c

Sets the number of packets per output file.

=item -E

Sets the probabilty that bytes in the output file are randomly changed.

=item -F

Sets the file format of the output capture file.

=item -T

Sets the packet encapsulation type of the output capture file.

=item -r

Causes the packets whose packet numbers are specified on the command
line to be written to the output capture file, and no other packets to
be written to the output capture file.

=item -v

Causes B<editcap> to print a number of messages while it's working.

=item -s

Sets the snapshot length to use when writing the data.

=item -t

Sets the time adjustment to use on selected frames.

=item -h

Prints the version and options and exits.

=back

=head1 EXAMPLES

To see more detailed description of the options use:

    editcap -h

To shrink the capture file by truncating the packets at 64 bytes and writing it as Sun snoop file use:

    editcap -s 64 -F snoop capture.pcap shortcapture.snoop

To delete packet 1000 from the capture file use:

    editcap capture.pcap sans1000.pcap 1000

To limit a capture file to packets from number 200 to 750 (inclusive) use:

    editcap -r capture.pcap small.pcap 200-750

To get all packets from number 1-500 (inclusive) use:

    editcap -r capture.pcap 500.pcap 1-500

or

    editcap capture.pcap 500.pcap 501-9999999

To filter out packets 10 to 20 and 30 to 40 into a new file use:

    editcap capture.pcap selection.pcap 10-20 30-40

To introduce 5% random errors in a capture file use:

=over 4

  editcap -E 0.05 capture.pcap capture_error.pcap

=back

=head1 SEE ALSO

I<tcpdump(8)>, I<pcap(3)>, I<ethereal(1)>, I<mergecap(1)>

=head1 NOTES

B<Editcap> is part of the B<Ethereal> distribution.  The latest version
of B<Ethereal> can be found at B<http://www.ethereal.com>.

=head1 AUTHORS

  Original Author
  -------- ------
  Richard Sharpe           <sharpe[AT]ns.aus.com>


  Contributors
  ------------
  Guy Harris               <guy[AT]alum.mit.edu>
